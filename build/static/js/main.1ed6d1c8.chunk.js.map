{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistic.module.css","components/Statistics/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistic.js","components/Statistics/Notification.js","components/Statistics/Statistics.js","components/App.js","index.js"],"names":["module","exports","Container","title","children","className","styles","container","FeedbackOptions","options","onLeaveFeedback","optionsList","Object","keys","map","option","key","name","btn","type","onClick","Statistic","label","value","statName","statValue","defaultProps","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","this","Section","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ed6d1c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"primary-font-stack\":\"Roboto, sans-serif\",\"container\":\"Section_container__3hjxR\",\"title\":\"Section_title__3QoG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"primary-box-shadow\":\"1px 1px 3px 1px #78787c\",\"optionsList\":\"FeedbackOptions_optionsList__CUqqQ\",\"btn\":\"FeedbackOptions_btn__CP0rP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"color-light-grey\":\"#8c8c8d\",\"statName\":\"Statistic_statName__1BsdU\",\"statValue\":\"Statistic_statValue__6Kcb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"message\":\"Notification_message__2jfuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsList\":\"Statistics_optionsList__2pXaS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Container = ({ title, children }) => (\n  <div className={styles.container}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={styles.optionsList}>\n      {Object.keys(options).map(option => (\n        <button\n          key={option}\n          name={option}\n          className={styles.btn}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({}).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistic.module.css';\n\nconst Statistic = ({ label, value }) => {\n  return (\n    <p>\n      <span className={styles.statName}>{label}:</span>{' '}\n      <span className={styles.statValue}>{value}</span>\n    </p>\n  );\n};\n\nStatistic.defaultProps = {\n  value: 0,\n};\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from './Statistic';\nimport Notification from './Notification';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return <Notification message=\"No feedback given\" />;\n  }\n  return (\n    <ul className={styles.optionsList}>\n      <li>\n        <Statistic label=\"Good\" value={good} />\n      </li>\n      <li>\n        <Statistic label=\"Neutral\" value={neutral} />\n      </li>\n      <li>\n        <Statistic label=\"Bad\" value={bad} />\n      </li>\n      <li>\n        <Statistic label=\"Total\" value={total} />\n      </li>\n      <li>\n        <Statistic label=\"Positive feedback\" value={positivePercentage} />\n      </li>\n    </ul>\n  );\n};\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: '0%',\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const { name } = e.target;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = Math.round((good * 100) / total);\n\n    return good === 0 ? '0%' : `${percentage}%`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}